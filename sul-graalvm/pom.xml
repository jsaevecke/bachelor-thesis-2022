<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.julien.saevecke</groupId>
	<artifactId>sul-graalvm</artifactId>
	<version>0.0.1</version>
	<name>sul-graalvm</name>
	<description>
		This module is used as a ‘System Under Learning‘ (SUL) meaning it is a system that can be learned and represented
		as a state machine. This particular module represents a simple coffee-machine. Communication is done via ‘RabbitMQ‘.
		For performance reasons is this application build as a native image via ‘GraalVM‘ and the framework ‘Spring Native‘.

		Accepts the following input (as a sequence):
		* POD
		* CLEAN
		* WATER
		* BUTTON

		Produces the following output (as a sequence):
		* ok
		* error
		* coffee!

		A usable learner to learn this coffee-machine SUL can be found under: ‘com.julien.saevecke.learnerjvm‘.

		Build command: ‘./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=pixian/sul:coffee-spring-native-graalvm‘.
		For more information about ‘Spring Native‘, 'GraalVM' or native images in general:
		*https://docs.spring.io/spring-native/docs/current/reference/htmlsingle/
		*https://www.graalvm.org
		*https://www.graalvm.org/22.1/reference-manual/native-image/
	</description>
	<properties>
		<java.version>11</java.version>
		<skipTests>true</skipTests>
		<repackage.classifier/>
		<spring-native.version>0.12.1</spring-native.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-native.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-api</artifactId>
            <version>0.16.0</version>
            <scope>compile</scope>
        </dependency>
		<dependency>
			<groupId>de.learnlib</groupId>
			<artifactId>learnlib-drivers-simulator</artifactId>
			<version>0.16.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.automatalib</groupId>
			<artifactId>automata-core</artifactId>
			<version>0.10.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.automatalib</groupId>
			<artifactId>automata-util</artifactId>
			<version>0.10.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
        </dependency>
        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-serialization-dot</artifactId>
            <version>0.10.0</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>${repackage.classifier}</classifier>
					<image>
						<builder>paketobuildpacks/builder:tiny</builder>
						<env>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
						</env>
					</image>
					<systemPropertyVariables>
						<springAot>false</springAot>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-native.version}</version>
				<configuration>
					<mode>native</mode> <!--native-agent-->
				</configuration>
				<executions>
					<!--<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>-->
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<native-buildtools.version>0.9.13</native-buildtools.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.junit.platform</groupId>
					<artifactId>junit-platform-launcher</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-buildtools.version}</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>test-native</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
